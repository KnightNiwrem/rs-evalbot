# timeout in seconds for each invocation
timeout = 20

[languages.rs]
# path to binary
path = "/usr/local/lib/evalbot/run_playpen"
# arguments to binary
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
cat <<EOF | rustc - -o ./out -C opt-level=2 -A warnings "$@" 2>&1
$(cat)
static VERSION: &'static str = "$(rustc -V | head -1 | tr -d '\n')";
EOF
exec ./out 2>&1 | sponge
''']
# string to prepend to code, optional
code_before = '''
#![feature(core_intrinsics)]
macro_rules! type_of {
    ($x:expr) => {
        {
            fn type_of<T>(x: &T) -> &'static str {
                unsafe { std::intrinsics::type_name::<T>() }
            }
            type_of(&$x)
        }
    }
}
fn show<T: std::fmt::Debug>(e: T) { println!("{:?}", e) }
fn main() {
    show({
'''
# string to append to code, optional
code_after = '''

    });
}'''

[languages.'rs!']
path = "/usr/local/lib/evalbot/run_playpen"
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
rustc - -o ./out -C opt-level=2 -A warnings "$@" 2>&1
exec ./out 2>&1 | sponge
''']

[languages.gcc]
path = "/usr/local/lib/evalbot/run_playpen"
code_before = '''
#include <stdio.h>
'''
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
gcc -w -x c - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.c]
path = "/usr/local/lib/evalbot/run_playpen"
code_before = '''
#include <stdio.h>
'''
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
clang -w -std=c11 -x c - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'g++']
path = "/usr/local/lib/evalbot/run_playpen"
code_before = '''
#include <iostream>
'''
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
g++ -w -x c++ - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'c++']
path = "/usr/local/lib/evalbot/run_playpen"
code_before = '''
#include <iostream>
'''
args = ["rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
clang++ -w -std=c++11 -x c++ - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'pl!']
path = "/usr/local/lib/evalbot/run_playpen"
args = ["perl_syscalls", "{TIMEOUT}", "/usr/bin/perl"]

#[[languages]]
#name = "cs"
#socket_address = "/run/eval/cseval.sock"

#[[languages]]
#name = "py"
#socket_address = "/run/eval/pyeval.sock"

#[[languages]]
#name = "fs"
#socket_address = "/run/eval/fseval.sock"

#[[languages]]
#name = "js"
#socket_address = "/run/eval/jseval.sock"

#[[languages]]
#name = "sc"
#binary_path = "/home/eval/playpen"
#binary_args = ["/opt/sandbox", "--mount-proc", "--user=eval", "--devices=/dev/urandom:r,/dev/null:rw", "--memory-limit=128",
#   "--syscalls-file=scala_syscalls",
#   "--", "/usr/lib/jvm/default-runtime/bin/java",
#   "-Xms32M", "-Xmx384M",
#   "-Xbootclasspath/a:/usr/share/scala/lib/jline.jar:/usr/share/scala/lib/scala-actors.jar:/usr/share/scala/lib/scala-compiler.jar:/usr/share/scala/lib/scala-continuations-library_2.11-1.0.2.jar:/usr/share/scala/lib/scala-continuations-plugin_2.11.6-1.0.2.jar:/usr/share/scala/lib/scala-library.jar:/usr/share/scala/lib/scala-parser-combinators_2.11-1.0.4.jar:/usr/share/scala/lib/scala-partest-extras.jar:/usr/share/scala/lib/scala-partest-javaagent.jar:/usr/share/scala/lib/scalap.jar:/usr/share/scala/lib/scala-reflect.jar:/usr/share/scala/lib/scala-repl-jline-embedded.jar:/usr/share/scala/lib/scala-repl-jline.jar:/usr/share/scala/lib/scala-swing_2.11-1.0.2.jar:/usr/share/scala/lib/scala-xml_2.11-1.0.4.jar",
#   '-classpath', '""', "-Dscala.home=/usr/share/scala", "-Dscala.usejavacp=true", "-jar", "/usr/local/lib/evalbot/scalaeval_2.11-1.0.jar"]
#persistent = true
